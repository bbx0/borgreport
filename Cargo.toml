# SPDX-FileCopyrightText: 2024 Philipp Micheel <bbx0+borgreport@bitdevs.de>
# SPDX-License-Identifier: GPL-3.0-or-later

[package]
name = "borgreport"
version = "0.3.0"
edition = "2024"
license = "GPL-3.0-or-later"
authors = ["Philipp Micheel <bbx0+borgreport@bitdevs.de>"]
description = "Summarize multiple BorgBackup repositories in one report and export metrics"
categories = ["command-line-utilities"]
keywords = ["borgbackup", "borg", "report", "metrics", "monitoring"]
rust-version = "1.87"
repository = "https://github.com/bbx0/borgreport"

[dependencies]
anyhow = "1.0"
clap = { version = "4.5", features = [
    "cargo",
    "derive",
    "env",
    "string",
    "unicode",
    "wrap_help",
] }
comfy-table = { version = "7.1", default-features = false, features = [] }
dotenvy = "0.15"
email_address = { version = "0.2", default-features = false }
human-repr = "1.1"
jiff = { version = "0.2", features = ["serde"] }
prometheus-client = "0.23"
sd-notify = "0.4"
quoted_printable = "0.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
typed-bytesize = "0.1"
whoami = { version = "1.5", default-features = false }

[build-dependencies]
anyhow = "1.0"
clap = { version = "4.5", features = ["cargo", "derive", "env"] }
clap_complete = "4.5"
email_address = { version = "0.2", default-features = false }

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
sealed_test = "1.1"

# Optimize the static builds for size
#  See: https://github.com/johnthagen/min-sized-rust
# Requires RUSTFLAGS='-C target-feature=+crt-static' until profile-rustflags is stable
#  See: https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#profile-rustflags-option
[profile.static]
inherits = "release"
strip = true        # Automatically strip symbols from the binary.
lto = "thin"        # Enable Link Time Optimization (LTO)
codegen-units = 1   # Reduce Parallel Code Generation Units to Increase Optimization
panic = "abort"     # Abort on Panic
opt-level = "z"     # Optimize For Size

# Debian packages
[profile.debian-build]
inherits = "static"
strip = false       # cargo-deb strips the binary itself

# RPM packages
[profile.rpm-build]
inherits = "static"

# Debian packages
[package.metadata.deb]
depends = "borgbackup" # We do a static build with no other runtime dependencies
extended-description = """\
A wrapper for BorgBackup to query the latest backup archives and perform health \
checks on repositories. It summarize the status of BorgBackup repositories with \
statistics, warnings and error messages. You can save the report as file or send \
it per mail and export OpenMetrics (Prometheus Metrics) for the last archives."""
section = "utils"
preserve-symlinks = true
maintainer-scripts = "debian/"
systemd-units = { enable = false, start = false, restart-after-upgrade = false, stop-on-upgrade = false, unit-scripts = "assets/systemd" }
assets = [
    { source = "target/release/borgreport", dest = "usr/bin/", mode = "755" },
    { source = "README.md", dest = "usr/share/doc/borgreport/README", mode = "644" },
    { source = "LICENSE-THIRD-PARTY.md", dest = "usr/share/doc/borgreport/LICENSE-THIRD-PARTY", mode = "644" },
    { source = "assets/systemd/borgreport.service", dest = "lib/systemd/user/", mode = "644" },
    { source = "assets/systemd/borgreport.timer", dest = "lib/systemd/user/", mode = "644" },
    { source = "assets/man/borgreport.1", dest = "usr/share/man/man1/", mode = "644" },
    { source = "assets/shell_completions/borgreport.bash", dest = "usr/share/bash-completion/completions/", mode = "644" },
    { source = "assets/shell_completions/borgreport.elv", dest = "usr/share/elvish/lib/", mode = "644" },
    { source = "assets/shell_completions/borgreport.fish", dest = "usr/share/fish/vendor_completions.d/", mode = "644" },
    { source = "assets/shell_completions/_borgreport", dest = "usr/share/zsh/site-functions/", mode = "644"},
]

# RPM packages
[package.metadata.generate-rpm]
requires = { borgbackup= "*" }
auto-req = "no" # We do a static build with no runtime dependencies
vendor = "Philipp Micheel"
assets = [
    { source = "target/release/borgreport", dest = "/usr/bin/", mode = "755" },
    { source = "README.md", dest = "/usr/share/doc/borgreport/README", mode = "644", doc = true },
    { source = "LICENSE", dest = "/usr/share/doc/borgreport/", mode = "644", doc = true },
    { source = "LICENSE-THIRD-PARTY.md", dest = "/usr/share/doc/borgreport/LICENSE-THIRD-PARTY", mode = "644", doc = true },
    { source = "assets/systemd/borgreport.service", dest = "/usr/lib/systemd/system/", mode = "644" },
    { source = "assets/systemd/borgreport.timer", dest = "/usr/lib/systemd/system/", mode = "644" },
    { source = "assets/systemd/borgreport.service", dest = "/usr/lib/systemd/user/", mode = "644" },
    { source = "assets/systemd/borgreport.timer", dest = "/usr/lib/systemd/user/", mode = "644" },
    { source = "assets/man/borgreport.1", dest = "/usr/share/man/man1/", mode = "644", doc = true },
    { source = "assets/shell_completions/borgreport.bash", dest = "/usr/share/bash-completion/completions/", mode = "644" },
    { source = "assets/shell_completions/borgreport.elv", dest = "/usr/share/elvish/lib/", mode = "644" },
    { source = "assets/shell_completions/borgreport.fish", dest = "/usr/share/fish/vendor_completions.d/", mode = "644" },
    { source = "assets/shell_completions/_borgreport", dest = "/usr/share/zsh/site-functions/", mode = "644"},
]
pre_install_script = """
# SUSE only
if command -v zypper && [ -x /usr/lib/systemd/systemd-update-helper ]; then
    /usr/lib/systemd/systemd-update-helper mark-install-system-units borgreport.service borgreport.timer || :
    /usr/lib/systemd/systemd-update-helper mark-install-user-units borgreport.service borgreport.timer || :
fi
"""
post_install_script = """
if [ -x /usr/lib/systemd/systemd-update-helper ]; then
    /usr/lib/systemd/systemd-update-helper install-system-units borgreport.service borgreport.timer || :
    /usr/lib/systemd/systemd-update-helper install-user-units borgreport.service borgreport.timer || :
fi
"""
pre_uninstall_script = """
if [ $1 -eq 0 ] && [ -x /usr/lib/systemd/systemd-update-helper ]; then
    /usr/lib/systemd/systemd-update-helper remove-system-units borgreport.service borgreport.timer || :
    /usr/lib/systemd/systemd-update-helper remove-user-units borgreport.service borgreport.timer || :
fi
"""
post_uninstall_script = """
# no action - do not restart the service after an update
:
"""

# cargo binstall
[package.metadata.binstall]
pkg-url = "{ repo }/releases/download/v{ version }/{ name }-{ version }-{ target-family }-{ target-arch }.tar.gz"
bin-dir = "{ name }-{ version }/{ bin }{ binary-ext }"
pkg-fmt = "tgz"
disabled-strategies = ["quick-install", "compile"]

[package.metadata.binstall.signing]
algorithm = "minisign"
pubkey = "RWQxgoizzRoa3VblLISF2HVuWLhyzrh1J1/YAOKjpwMNg7ee2MTbHs4G"
file = "{ url }.minisig"
